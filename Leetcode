# In[1]:
# At a lemonade stand, each lemonade costs $5.
#
# Customers are standing in a queue to buy from you, and order one at a time (in the order specified by bills).
#
# Each customer will only buy one lemonade and pay with either a $5, $10, or $20 bill.  You must provide the correct change to each customer, so that the net transaction is that the customer pays $5.
#
# Note that you don't have any change in hand at first.
#
# Return true if and only if you can provide every customer with correct change.

def functions(change):
    five = ten = 0
    for x in change:
        if x == 5:
            five += 1
        elif x == 10 and five:
            ten += 1
            five -= 1
        elif x == 20 and five and ten:
            five -= 1
            ten -= 1
        elif x == 20 and five >= 3:
            five -= 3
        else:
            return False
    return True


# In[ ]:
# leetcode problem 169. Given an array of size n, find the majority element. The majority element is the element that appears more than âŒŠ n/2 âŒ‹ times.

# You may assume that the array is non-empty and the majority element always exist in the array.


def majority(num):
    x = len(num) // 2
    for i in num:
        count = sum(1 for i in num if i == num)
        if count > x:
            return num


